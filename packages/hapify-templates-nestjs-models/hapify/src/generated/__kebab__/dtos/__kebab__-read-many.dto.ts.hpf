import { ArgsType } from '@nestjs/graphql';
import {
  IsOptional,

  <<if Fields boolean and searchable>>
    IsBoolean, 
  <<endif>>

  <<if Fields (string or entity) and searchable>>
    IsString,
  <<endif>>

  <<if Fields email and searchable>>
    IsEmail, 
  <<endif>>

  <<if Fields (number or datetime) and searchable>>
    IsNumber,
  <<endif>>

} from 'class-validator';

@ArgsType()
export class <<Model pascal>>ReadManyDto {
<<for Fields searchable f>>
  <<if f boolean>>
    @IsBoolean() 
  <<endif>>

  <<if f string or entity>>
    @IsString() 
  <<endif>>

  <<if f email>>
    @IsEmail() 
  <<endif>>

  <<if f number or datetime>>
    @IsNumber()
  <<endif>>

  @IsOptional()
  <<=optionalTypedProperty(f)>>
<<endfor>>
}

<<<
function optionalTypedProperty(f) {
  let out = f.names.camel;
  out += "?: "
  if (f.type === "boolean") out += "boolean";
  else if (f.type === "string") out += "string";
  else if (f.type === "number") out += "number";
  else if (f.type === "datetime") out += "number | Date";
  else if (f.type === "entity") {
    out +=  "string"
  }
  if (f.multiple) out += "[]";
  out += ";";
  return out;
}
>>>
