// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Nestjs graphql dto generator
generator nestjsGraphql {
  provider                      = "prisma-nestjs-graphql"
  output                        = "../src/nestjs-graphql-dtos"
  purgeOutput                   = true
  reExport                      = Single
  noAtomicOperations            = true
  fields_Validator_from         = "class-validator"
  fields_Validator_input        = true
  useInputType_StringFilter_ALL = "string"
}

// Nestjs grahpql resolvers generator
generator graphqlResolvers {
  provider = "hapify-prisma-nestjs-graphql-resolvers-generator"
  output = "../src/nestjs-resolvers"

  // Path relative to the output directory
  tsConfigFilePath   = "../../tsconfig.app.json"
  nestjsServicesImportPath = "./nestjs-services"
  nestjsGraphqlDtosImportPath = "./nestjs-graphql-dtos"
}

// Nestjs common services generator
generator nestjsServices {
  provider = "prisma-nestjs-services-generator"
  output   = "../src/nestjs-services"
  tsConfigFilePath   = "../../tsconfig.app.json"
}

//--------------------------------------------
// This part describe the project models
//--------------------------------------------
model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  role   Role   @relation(fields: [roleId], references: [id])
  roleId Int
}

model Role {
  id     Int    @id @default(autoincrement())
  name    String
  users User[]
  rights Right[]
}

model Right {
  id     Int    @id @default(autoincrement())
  name    String @unique
  roles Role[]
}

//--------------------------------------------
// Uncomment the next bloc to add the Tag model
//--------------------------------------------
// model Tag {
//   id     Int    @id @default(autoincrement())
//   name    String @unique
//   description String?
// }
