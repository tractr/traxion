// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Nestjs graphql dto generator
generator nestjsGraphqlDtos {
  provider                      = "trxn-prisma-nestjs-graphql-dtos-generator"
  output                        = "../src/nestjs-graphql-dtos"
  // Path relative to the output directory
  tsConfigFilePath            = "../../tsconfig.app.json"
}

// Nestjs public grahpql resolvers generator
generator nestjsGraphqlResolvers {
  provider = "trxn-prisma-nestjs-graphql-resolvers-generator"
  output   = "../src/nestjs-resolvers"

  // Path relative to the output directory
  tsConfigFilePath            = "../../tsconfig.app.json"
  nestjsServicesImportPath    = "./nestjs-services"
  nestjsGraphqlDtosImportPath = "./nestjs-graphql-dtos"
}

// Nestjs authorizd graphql resolvers generator
generator nestjsAuthorizedGraphqlResolvers {
  provider                           = "trxn-prisma-nestjs-authorized-graphql-resolvers-generator"
  output                             = "../src/nestjs-authorized-resolvers"
  tsConfigFilePath                    = "../../tsconfig.app.json"
  nestjsServicesImportPath           = "./nestjs-services"
  nestjsGraphqlDtosImportPath        = "./nestjs-graphql-dtos"
  nestjsAuthorizedServicesImportPath = "./nestjs-authorized-services"
}

// Nestjs common services generator
generator nestjsServices {
  provider         = "trxn-prisma-nestjs-services-generator"
  output           = "../src/nestjs-services"
  tsConfigFilePath = "../../tsconfig.app.json"
}

// Nestjs common services generator
generator nestjsAuthorizedServices {
  provider                 = "trxn-prisma-nestjs-authorized-services-generator"
  output                   = "../src/nestjs-authorized-services"
  tsConfigFilePath         = "../../tsconfig.app.json"
  nestjsServicesImportPath = "./nestjs-services"
}

generator caslConfig {
  provider         = "trxn-prisma-casl-generator"
  output           = "../src/casl"
  tsConfigFilePath = "../../tsconfig.app.json"
}

model User {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  name        String?
  /// @trxn/hidden
  /// @trxn/encrypted
  password    String
  roles       Role[]  @default([USER])
  tasks       Task[]  @relation("TaskToAuthor")
  sharedTasks Task[]  @relation("TaskToUser")
}

model Task {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus @default(OPEN)
  author      User       @relation("TaskToAuthor", fields: [authorId], references: [id])
  authorId    Int
  /// @trxn/permissions: readOnly
  sharedWith  User[]     @relation("TaskToUser")
}

enum TaskStatus {
  OPEN
  IN_PROGRESS
  DONE
}

enum Role {
  ADMIN
  USER
}
