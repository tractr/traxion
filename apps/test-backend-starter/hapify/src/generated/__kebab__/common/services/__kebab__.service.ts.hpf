import { Injectable } from '@nestjs/common';
import { Prisma, <<Model pascal>> } from '@prisma/client';
import { <<Model pascal>>DatabaseService } from './<<Model kebab>>-database.service';

@Injectable()
export class <<Model pascal>>Service {
  constructor(private readonly <<Model camel>>DatabaseService: <<Model pascal>>DatabaseService) {}

  public async create(params: Prisma.<<Model pascal>>CreateArgs): Promise< <<Model pascal>> > {
    return this.<<Model camel>>DatabaseService.create(params);
  }
 
  public async findUnique(
    params: Prisma.<<Model pascal>>FindUniqueArgs
  ): Promise< <<Model pascal>> | null> {
    return this.<<Model camel>>DatabaseService.findUnique(params);
  }
 
  public async findMany(params: Prisma.<<Model pascal>>FindManyArgs): Promise< <<Model pascal>> []> {
    return this.<<Model camel>>DatabaseService.findMany(params);
  }
 
  public async count(params: Prisma.<<Model pascal>>CountArgs): Promise<number> {
    return this.<<Model camel>>DatabaseService.count(params);
  }
 
  public async update(params: Prisma.<<Model pascal>>UpdateArgs): Promise< <<Model pascal>> > {
    return this.<<Model camel>>DatabaseService.update(params);
  }
 
  public async delete(params: Prisma.<<Model pascal>>DeleteArgs): Promise< <<Model pascal>> > {
    return this.<<Model camel>>DatabaseService.delete(params);
  }
}

