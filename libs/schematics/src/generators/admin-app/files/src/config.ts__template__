export async function fetchAppConfigJson<T>(
  url = '/assets/app-config.json',
  getConfig = (config: Record<string, unknown>) => config as unknown as T,
) {
  const response = await fetch(url);
  const config: Record<string, unknown> = await response.json();

  return getConfig(config);
}

export interface FetchConfigurationOptions<T> {
  appConfigUrl?: string;
  getConfig?: (angularConfig: Record<string, unknown>) => T;
}

export const ADMIN_CONFIGURATION_SESSION_STORAGE = 'ADMIN_CONFIGURATION';

export async function fetchConfiguration<T>(
  options?: FetchConfigurationOptions<T>,
) {
  const stringifyConfiguration = sessionStorage.getItem(
    ADMIN_CONFIGURATION_SESSION_STORAGE,
  );

  let config;

  if (typeof stringifyConfiguration === 'string') {
    try {
      config = JSON.parse(stringifyConfiguration);
      // eslint-disable-next-line no-empty
    } catch {}
  }

  if (!config) {
    config = await fetchAppConfigJson(options?.appConfigUrl);

    sessionStorage.setItem(
      ADMIN_CONFIGURATION_SESSION_STORAGE,
      JSON.stringify(config),
    );
  }

  config = options?.getConfig ? options?.getConfig(config) : config;

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  (window as any)[ADMIN_CONFIGURATION_SESSION_STORAGE] = config;

  return config;
}
