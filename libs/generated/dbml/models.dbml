

//--------------------------
// Answer
Table Answer {
  id varchar [pk]
  created_at datetime [not null, default: `now()`]
  user varchar [ref: > User.id]
  question varchar [ref: > Question.id]
  answer_date datetime [not null]
}
// Many-to-many for Answer.tags
Table Answer_Tags {
    id integer [pk, increment]
    answer varchar [ref: > Answer.id]
    tag varchar [ref: > Tag.id]
}

//--------------------------
// Department
Table Department {
  id varchar [pk]
  enterprise varchar [ref: > Enterprise.id]
}

//--------------------------
// Enterprise
Table Enterprise {
  id varchar [pk]
}
// Many-to-many for Enterprise.employee
Table Enterprise_Employee {
    id integer [pk, increment]
    enterprise varchar [ref: > Enterprise.id]
    user varchar [ref: > User.id]
}

//--------------------------
// Internal Field
Table InternalField {
  id varchar [pk]
  default_nullable varchar 
  default_string varchar [not null]
  default_number integer [not null]
  default_boolean integer [not null]
  default_datetime datetime [not null, default: `now()`]
  default_enum internal_field_default_enum [not null]
  custom_string varchar [not null]
  custom_number integer [not null]
  custom_boolean integer [not null]
  custom_datetime datetime [not null, default: `now()`]
  custom_enum internal_field_custom_enum [not null]
}
Enum internal_field_default_enum {
    enum1
    enum2
}
Enum internal_field_custom_enum {
    enmu1
    enum2
}

//--------------------------
// Message
Table Message {
  id varchar [pk]
  created_at datetime [not null, default: `now()`]
  text varchar [not null]
  hour datetime 
}
// Many-to-many for Message.tags
Table Message_Tags {
    id integer [pk, increment]
    message varchar [ref: > Message.id]
    tag varchar [ref: > Tag.id]
}
// Many-to-many for Message.questions
Table Message_Questions {
    id integer [pk, increment]
    message varchar [ref: > Message.id]
    question varchar [ref: > Question.id]
}

//--------------------------
// Open Question
Table OpenQuestion {
  id varchar [pk]
  created_at datetime [not null, default: `now()`]
  text varchar [not null]
  key varchar [not null]
  question varchar [ref: > Question.id]
  Indexes {
    key [unique]
  }
}

//--------------------------
// Question
Table Question {
  id varchar [pk]
  created_at datetime [not null, default: `now()`]
  title varchar [not null]
  text varchar [not null]
  parent_question varchar [ref: > Question.id]
}
// Many-to-many for Question.tags
Table Question_Tags {
    id integer [pk, increment]
    question varchar [ref: > Question.id]
    tag varchar [ref: > Tag.id]
}

//--------------------------
// Tag
Table Tag {
  id varchar [pk]
  created_at datetime [not null, default: `now()`]
  label varchar [not null]
  owner varchar [ref: > User.id]
}

//--------------------------
// Unique Value Field
Table UniqueValueField {
  id varchar [pk]
  unique_string varchar [not null]
  unique_number integer [not null]
  unique_boolean integer [not null]
  unique_datetime datetime [not null]
  unique_enum unique_value_field_unique_enum [not null]
  unique_object undefined [not null]
  Indexes {
    (unique_string,unique_number,unique_boolean,unique_datetime,unique_enum) [unique, name: 'unique_string_unique_number_unique_boolean_unique_datetime_unique_enum']
  }
}
Enum unique_value_field_unique_enum {
    value1
    value2
}

//--------------------------
// User
Table User {
  id varchar [pk]
  created_at datetime [not null, default: `now()`]
  name varchar [not null]
  email varchar [not null]
  password varchar 
  list_object undefined [not null]
  roles user_roles [not null]
  object undefined [not null]
  Indexes {
    email [unique]
  }
}
Enum user_roles {
    admin
    user
    guest
}

//--------------------------
// Variable
Table Variable {
  id varchar [pk]
  created_at datetime [not null, default: `now()`]
  value varchar [not null]
  open_question varchar [ref: > OpenQuestion.id]
  answer varchar [ref: > Answer.id]
}
