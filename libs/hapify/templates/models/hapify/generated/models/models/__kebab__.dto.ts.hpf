
<<if Fields unique>>
	
<<if Fields enum>>
import {
  <<for Fields enum and unique enumField>>
  <<Model pascal>><<enumField pascal>>,
  <<endfor>>
} from '../enums';
<<endif>>
	
<<if Fields object>>
import type { JsonObject } from '@tractr/common';
<<endif>>
	

export type <<Model pascal>>UniqueValues = {
  <<for Fields not internal and not boolean and not enum and unique field>>
    <<if field not entity>>
      <<field camel>>: <<=getType(field)>>[],
    <<else>>
      <<field camel>>Id: string[];
    <<endif>>
  <<endfor>>
};
<<endif>>
	
<<<
function getType(f) {
  if (f.type === "boolean") return "boolean";
  else if (f.type === "string") return "string";
  else if (f.type === "enum") return `${root.names.pascal}${f.names.pascal}`;
  else if (f.type === "number") return "number";
  else if (f.type === "datetime") return "Date";
  else if (f.type === "object") return "JsonObject";
}
>>>
