import { Prisma } from '@prisma/client';

export type URLSearchParamsType =
  | string
  | string[][]
  | Record<string, string>
  | URLSearchParams
  | Record<string, string | number | boolean | string[] | string[][] | Date | undefined>
  | Prisma.JsonObject | Prisma.JsonObject[];
 
export function getUrlSearchParams(init: URLSearchParamsType) {
  const params = init;
  if (
    typeof params === 'object' &&
    !Array.isArray(params) &&
    params !== null &&
    !(params instanceof URLSearchParams)
  ) {
    // Specifically remove undefined value if found
    Object.keys(params as Record<string, any>).forEach((key) =>
      params[key] === undefined ? delete params[key] : {},
    );
  }
  return new URLSearchParams(
    params as string | string[][] | Record<string, string> | URLSearchParams,
  );
}
 
export function getUrl(
  apiUrl: URL,
  appendUrl = '',
  params: URLSearchParamsType = {},
): URL {
  const url = new URL(
    `${apiUrl.pathname.replace(/\/$/, '')}${appendUrl}`,
    apiUrl,
  );
  const queries = getUrlSearchParams(params);

  url.search = queries.toString();

  return url;
}
 
