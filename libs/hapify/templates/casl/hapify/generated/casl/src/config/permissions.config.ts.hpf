import { PolicyHandlerType } from "@tractr/common";
import { subject } from '@casl/ability';
 
import { AppAbility, Actions } from "../interfaces";
 
export const Permission: Record<string, PolicyHandlerType<AppAbility>> = {
  <<for Models model>>
  COUNT_<<model constant>>: (ability, obj) =>
    ability.can(
      Actions.COUNT,
      obj ? subject('<<model pascal>>', obj) : '<<model pascal>>',
    ),
  CREATE_<<model constant>>: (ability, obj) =>
    ability.can(
      Actions.CREATE,
      obj ? subject('<<model pascal>>', obj) : '<<model pascal>>',
    ),
  READ_<<model constant>>: (ability, obj) =>
    ability.can(
      Actions.READ,
      obj ? subject('<<model pascal>>', obj) : '<<model pascal>>',
    ),
  SEARCH_<<model constant>>: (ability, obj) =>
    ability.can(
      Actions.SEARCH,
      obj ? subject('<<model pascal>>', obj) : '<<model pascal>>',
    ),
  UPDATE_<<model constant>>: (ability, obj) =>
    ability.can(
      Actions.UPDATE,
      obj ? subject('<<model pascal>>', obj) : '<<model pascal>>',
    ),
  REMOVE_<<model constant>>: (ability, obj) =>
    ability.can(
      Actions.REMOVE,
      obj ? subject('<<model pascal>>', obj) : '<<model pascal>>',
    ),
  <<endfor>>
};
