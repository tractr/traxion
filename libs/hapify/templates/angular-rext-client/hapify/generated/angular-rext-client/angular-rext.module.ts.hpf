import { ModuleWithProviders, NgModule } from '@angular/core';
import { AsyncOptions, ModuleOptionsFactory } from '@tractr/angular-tools';
import { ANGULAR_REXT_CONFIGURATION } from './constants';
import { AngularRextConfiguration } from './interfaces';
 
import { 
<<for Models model>>
  <<model pascal>>Service,
<<endfor>>
} from './services';
 
@NgModule({
  providers: [
    <<for Models model>>
      <<model pascal>>Service,
    <<endfor>>
  ],
})
export class AngularRextModule extends ModuleOptionsFactory<
  AngularRextConfiguration,
  AngularRextConfiguration
>(ANGULAR_REXT_CONFIGURATION) {
  static override register(
    options: AngularRextConfiguration,
  ): ModuleWithProviders<AngularRextModule> {
    return super.register(options);
  }
 
  static override forRoot(
    options: AngularRextConfiguration,
  ): ModuleWithProviders<AngularRextModule> {
    return super.forRoot(options);
  }
 
  static override registerAsync(
    options: AsyncOptions<AngularRextConfiguration, AngularRextConfiguration>,
  ): ModuleWithProviders<AngularRextModule> {
    return super.registerAsync(options);
  }
 
  static override forRootAsync(
    options: AsyncOptions<AngularRextConfiguration, AngularRextConfiguration>,
  ): ModuleWithProviders<AngularRextModule> {
    return super.forRootAsync(options);
  }
}
 