#####################################
##      Reusable workflow tests     ##
#####################################
name: Tests

# Make the workflow reusable
on:
  workflow_call:
    inputs:
      registryUrl:
        default: 'https://registry.npmjs.org'
        description: 'The npm token if needed'
        required: false
        type: string

      codecov:
        default: false
        description: 'Run the test with codecov or not'
        required: false
        type: boolean

      build:
        default: true
        description: 'Run the build step'
        required: false
        type: boolean

      lint:
        default: true
        description: 'Run the lint step'
        required: false
        type: boolean

    secrets:
      NPM_TOKEN:
        description: 'The npm token if needed'
        required: false

      CODECOV_TOKEN:
        description: 'The codecov token if needed'
        required: false

jobs:
  tests:
    name: Build, Lint and Tests

    # Our code will run on node 16 and Linux
    strategy:
      matrix:
        node: [16.x]
        os: [ubuntu-20.04]

    runs-on: ['${{ matrix.os }}']

    steps:
      # First we checkout the code
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install dependencies and generate files
        uses: tractr/stack/.github/actions/setup@main
        with:
          registryUrl: ${{ inputs.registryUrl }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Run the build
      - name: Run Affected Build
        if: ${{ inputs.build }}
        shell: bash
        run: npx nx affected:build --base=remotes/origin/main

      # Run the lint
      - name: Run Affected Lint
        if: ${{ inputs.lint }}
        shell: bash
        run: npx nx affected:lint --base=remotes/origin/main

      # We only run the affected test
      - name: Run Affected Tests
        if: ${{ !inputs.codecov }}
        shell: bash
        run: npx nx affected:test --base=remotes/origin/main

      # Run the tests and the coverage
      - name: Run Tests with Coverage
        shell: bash
        if: ${{ inputs.codecov }}
        run:
          npx nx run-many --target test --all --codeCoverage --coverageReporters
          json,text

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        if: ${{ inputs.codecov }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          fail_ci_if_error: true
          flags: unittests
          name: codecov-umbrella
          verbose: true
