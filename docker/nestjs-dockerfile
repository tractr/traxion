#syntax=docker/dockerfile:1.2

# ---- Base Node ----
FROM mhart/alpine-node:15 AS base
ARG app
ARG NODE_AUTH_TOKEN

# set working directory
WORKDIR /root/tractr

# copy project file
COPY ./package.json .
COPY ./tsconfig.json .
COPY ./lerna.json .
COPY ./hapify-models.json .
COPY ${app}/hapify ${app}/hapify
COPY ${app}/prisma ${app}/prisma
COPY ${app}/.hapifyrc.js ${app}
COPY ${app}/nest-cli.json ${app}
COPY ${app}/package.json ${app}
COPY ${app}/tsconfig.json ${app}
COPY ${app}/tsconfig.build.json ${app}

# ---- Production Dependencies ----
FROM base AS dependencies-prod
RUN --mount=type=secret,id=npmrc,target=/root/.npmrc NODE_AUTH_TOKEN=${NODE_AUTH_TOKEN} npm i --legacy-peer-deps --only=prod --ignore-scripts

# ---- Dependencies ----
FROM base AS dependencies-dev
RUN --mount=type=secret,id=npmrc,target=/root/.npmrc NODE_AUTH_TOKEN=${NODE_AUTH_TOKEN} npm i --legacy-peer-deps 

# ---- Dependencies ----
FROM dependencies-dev AS build
COPY ${app}/src ${app}/src
RUN npm run generate
RUN npm run build

#
# ---- Release ----
FROM dependencies-prod AS release
WORKDIR /root/tractr/${app}
COPY --from=build /root/tractr/${app}/dist ./dist

# expose port and define CMD
EXPOSE 3000
CMD ["npm", "run", "start:prod"]
