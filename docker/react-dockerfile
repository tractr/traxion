#syntax=docker/dockerfile:1.2

# ---- Base Node ----
FROM node:16-alpine AS base
ARG app
ARG NODE_AUTH_TOKEN
ARG PORT

# set working directory
WORKDIR /root/tractr

# copy project files
COPY ./package.json .
COPY ./package-lock.json .


# ---- Dev Dependencies ----
FROM base AS dev-dependencies
COPY . .
RUN --mount=type=secret,id=npmrc,target=/root/.npmrc \
    NODE_AUTH_TOKEN=${NODE_AUTH_TOKEN} \
    npm ci --no-audit --no-progress --force
RUN npm run generate

# ---- Build ----
FROM dev-dependencies AS build
RUN npm run nx -- run ${app}:build --prod
RUN rm -f /root/tractr/dist/apps/${app}/assets/app-config.json

#
# ---- Release ----
FROM tractr/nginx-generated-envs:1.20-alpine AS angular-prod
ARG app

## Copy our default nginx config
COPY ./apps/${app}/nginx/default.conf /etc/nginx/conf.d/

## Remove default nginx website
RUN rm -rf /usr/share/nginx/html/*

## From ‘build’ stage copy over the artifacts in dist folder to default nginx public folder
COPY --from=build /root/tractr/dist/apps/${app}/ /usr/share/nginx/html

EXPOSE 4200

CMD ["nginx", "-g", "daemon off;"]
